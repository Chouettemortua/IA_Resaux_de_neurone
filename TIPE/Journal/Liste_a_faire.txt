A faire :

    Prioritaire:
        Peut-être faire que la normalisation soit sur des val max logique plûtot que le max du dataset de référence (beaucoup mieux adapté aux problème)
        Equiliber les donné pour la qualité du sommeil (ou autre solution)
        Utilisation de deux threshold pour la quality une sur la en preprocecing pour séparer les class et un pour l'IA aprés entrainement pour optimiser
        Optimiser le threshold pour la sortie 
        EN COURS --- Boser l'analyse du dataset pour vérifier la pertinance de mes résultat et apporté correction et critique aux besoin
        Passer les Occupation a seulement deux choix : Working, Not Working
        Faire le retour (ce qu'il faut améliorer)
        FAIT --- Changement du type d'IA pour quality -> regression
        FAIT --- Test retirer trouble de l'entrainement pour Quality, Decision il est retirer (plus logique)
        FAIT --- Faire en sorte que le trouble soit différencié pas juste détection d'un problème
        FAIT --- Potentielement retirer certaine variable (Blood pressure)
        FAIT --- Avoir qq chose de fonctionel duquel on peut complexifié et optimiser/améliorer

    Pour plus tard :
        si on a une vrai app qu'elle conserve les dernier donné ouvert (rouvre auto) et un meilleur interface chargement et sauvgarde
        Regarder des truc sur le fléau de la dimension
        se renseigner sur le fetcher engineering
        Commenter correctement tout le code

    Optionel fun:

        Rendre l'ui multilingue
        passer sur gradio pour faire un app en ligne : https://www.gradio.app
        gérer les droit sur ma production (Si je pouse jusqu'a avoir un truc publiable)
        Avoir un vrai app (Desktop, phone, online; voir ce qui est possible et plus ou moins facile)